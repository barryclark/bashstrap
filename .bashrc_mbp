### Prompt Colors 
# Modified version of @gf3’s Sexy Bash Prompt 
# (https://github.com/gf3/dotfiles)
#if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
#	export TERM=gnome-256color
#elif infocmp xterm-256color >/dev/null 2>&1; then
#	export TERM=xterm-256color
#fi


if tput setaf 1 &> /dev/null; then
	tput sgr0
	BLACK=$(tput setaf 190)
	MAGENTA=$(tput setaf 5)
	ORANGE=$(tput bold; tput setaf 172)
	GREEN=$(tput setaf 2)
    LIGHT_GREEN=$(tput bold; tput setaf 2)
    BLUE=$(tput setaf 4)
    LIGHT_BLUE=$(tput bold; tput setaf 4)
    YELLOW=$(tput bold; tput setaf 3)
	PURPLE=$(tput setaf 1)
    PINK=$(tput bold; tput setaf 5)
	WHITE=$(tput setaf 7)
	BOLD=$(tput bold)
	RESET=$(tput sgr0)
else
	BLACK="\033[01;30m"
	MAGENTA="\033[1;31m"
	ORANGE="\033[1;33m"
	GREEN="\033[0;32m"
    LIGHT_GREEN="\033[1;32m"
    BLUE="\033[0;34m"
    LIGHT_BLUE="\033[1;34m"
    YELLOW="\033[0;33m"
	PURPLE="\033[1;35m"
    PINK="\033[0;35m"
	WHITE="\033[1;37m"
	BOLD=""
	RESET="\033[m"
fi

export BLACK
export MAGENTA
export ORANGE
export GREEN
export LIGHT_GREEN
export BLUE
export LIGHT_BLUE
export YELLOW
export PURPLE
export PINK
export WHITE
export BOLD
export RESET

# Git branch details
function parse_git_dirty() {
	[[ $(git status 2> /dev/null | tail -n1) != *"working directory clean"* ]] && echo "*"
}
function parse_git_branch() {
	git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

# Change this symbol to something sweet. 
# (http://en.wikipedia.org/wiki/Unicode_symbols)
#symbol="⚡  "
#symbol="🌐  "
#symbol="✨  "
#symbol="❤  "
#symbol="👊  "
#symbol="👉  "
#symbol="💫  "
#symbol="🎼  "
symbol="👾  "
#symbol="🚀  "
#symbol="💋  "
#symbol="💬  "
#symbol="🎸  "
#symbol="😄  "
#symbol="😈  "
#symbol="🎵  "
#symbol="👣  "
#symbol="🔥  "
#symbol="🐸  "
#symbol="🍂  "
#symbol="🐾  "
#symbol="🎹  "
#symbol="💡  "
#symbol="🗿  "

# my old one for reference
#export PS1='\[\033[0;32m\]\u\[\033[1;32m\]@\[\033[1;34m\]\h\[\033[1;32m\]:\[\033[0;33m\]\W \[\033[0;35m\]\$ \[\033[00m\]'

# original bashstrap one for reference
#export PS1="\[${BOLD}${MAGENTA}\]\u \[$WHITE\]in \[$GREEN\]\w\[$WHITE\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\[$PURPLE\]\$(parse_git_branch)\[$WHITE\]\n$symbol\[$RESET\]"

export PS1="\[${GREEN}\]\u\[${LIGHT_GREEN}\]@\[${LIGHT_BLUE}\]\h\[${LIGHT_GREEN}\]:\[${YELLOW}\]\w\[${PURPLE}\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" [\")\$(parse_git_branch)\$([[ -n \$(git branch 2> /dev/null) ]] && echo \"]\")\[$WHITE\]\n$symbol\[$RESET\]"
export PS2="\[$ORANGE\]→\[$RESET\]"

cdl () {
    cd $1 && ls -lahFG
}

#andy.stanton.is rsync
alias to-you-dr='rsync -raz --progress --update . arx:/data/sites/andy.stanton.is --dry-run --exclude "writing/content/data/" --exclude "writing/node_modules/"'
alias to-you='rsync -raz --progress --update . arx:/data/sites/andy.stanton.is --exclude "writing/content/data/" --exclude "writing/node_modules/"'
alias to-me-dr='rsync -raz --progress --update arx:/data/sites/andy.stanton.is/ . --dry-run --exclude "writing/node_modules/"'
alias to-me='rsync -raz --progress --update arx:/data/sites/andy.stanton.is/ . --exclude "writing/node_modules/"'

### Misc
SHORTHOSTNAME=$(hostname | cut -f1 -d".")
# Only show the current directory's name in the tab 
export PROMPT_COMMAND='echo -ne "\033]0;${SHORTHOSTNAME}:${PWD##*/}\007"'
export DOCKER_HOST=tcp://


#if which pyenv > /dev/null; then eval "$(pyenv init -)"; fi
#export PYENV_ROOT=/usr/local/opt/pyenv
#export PYTHONPATH=/usr/local/lib/python2.7/site-packages
#export VERSIONER_PYTHON_PREFER_32_BIT=yes
#alias py='VERSIONER_PYTHON_PREFER_32_BIT=yes; arch -i386 python'

export NO_PROXY=localhost,127.0.0.1,192.168.59.103


if [ -f $(brew --prefix)/etc/bash_completion ]; then
    . $(brew --prefix)/etc/bash_completion
fi